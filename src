-- Passo 1: Criar o banco de dados
DROP DATABASE IF EXISTS Escola;
CREATE DATABASE Escola;
USE Escola;

-- Passo 2: Criar a tabela de Alunos
CREATE TABLE Alunos (
    id_aluno INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    data_nascimento DATE,
    endereco VARCHAR(255)
);

-- Passo 3: Criar a tabela de Cursos
CREATE TABLE Cursos (
    id_curso INT AUTO_INCREMENT PRIMARY KEY,
    nome_curso VARCHAR(100) NOT NULL,
    descricao TEXT
);

-- Passo 4: Criar a tabela de Notas
CREATE TABLE Notas (
    id_nota INT AUTO_INCREMENT PRIMARY KEY,
    id_aluno INT,
    id_curso INT,
    nota DECIMAL(3, 2), -- Aceitar notas com casas decimais, por exemplo, 9.75
    FOREIGN KEY (id_aluno) REFERENCES Alunos(id_aluno) ON DELETE CASCADE,
    FOREIGN KEY (id_curso) REFERENCES Cursos(id_curso) ON DELETE CASCADE
);

-- Passo 5: Inserir dados na tabela Alunos
INSERT INTO Alunos (nome, data_nascimento, endereco) VALUES
('João Silva', '2001-04-15', 'Rua A, 123'),
('Maria Oliveira', '2002-07-23', 'Avenida B, 456'),
('Carlos Santos', '2000-10-30', 'Travessa C, 789');

-- Passo 6: Inserir dados na tabela Cursos
INSERT INTO Cursos (nome_curso, descricao) VALUES
('Matemática', 'Curso de Matemática Básica e Avançada'),
('História', 'História Geral e do Brasil'),
('Física', 'Introdução à Física e Física Moderna');

-- Passo 7: Inserir dados na tabela Notas
INSERT INTO Notas (id_aluno, id_curso, nota) VALUES
(1, 1, 8.5),
(1, 2, 9.0),
(2, 1, 7.0),
(2, 3, 8.0),
(3, 2, 6.5),
(3, 3, 9.5),
(1, 3, 7.5);

-- Consultas: Média das Notas por Curso
SELECT Cursos.nome_curso AS Nome_Curso, AVG(Notas.nota) AS Media_Notas
FROM Notas
JOIN Cursos ON Notas.id_curso = Cursos.id_curso
GROUP BY Cursos.nome_curso;

-- Ajuste para listar o aluno com a maior nota em cada curso
SELECT NC.Nome_Curso, NC.Nome_Aluno, NC.Maior_Nota
FROM (
    SELECT 
        Cursos.nome_curso AS Nome_Curso, 
        Alunos.nome AS Nome_Aluno, 
        Notas.nota AS Maior_Nota,
        ROW_NUMBER() OVER (PARTITION BY Cursos.id_curso ORDER BY Notas.nota DESC) AS rn
    FROM Notas
    JOIN Alunos ON Notas.id_aluno = Alunos.id_aluno
    JOIN Cursos ON Notas.id_curso = Cursos.id_curso
) AS NC
WHERE NC.rn = 1;

-- Atualizar a nota de João Silva no curso de Matemática
UPDATE Notas
SET nota = 9.8
WHERE id_aluno = 1 AND id_curso = 1;

-- Atualizar o endereço de Maria Oliveira
UPDATE Alunos
SET endereco = 'Rua Nova, 321'
WHERE id_aluno = 2;

-- Excluir o aluno Carlos Santos e suas notas associadas
DELETE FROM Alunos
WHERE id_aluno = 3;

-- Excluir o curso de História e as notas associadas
DELETE FROM Cursos
WHERE id_curso = 2;
